// 音频管理类，负责处理游戏中的所有音频效果
export class AudioManager {
  constructor() {
    this.audioContext = null;
    this.sounds = new Map();
    this.bgMusic = null;
    this.isMuted = false;
    this.bgMusicEnabled = true;
    this.soundEffectsEnabled = true;
    this.isLoading = true;

    this.initAudioContext();
    this.loadSounds().then(() => {
      this.isLoading = false;
    });
  }

  // 初始化音频上下文
  initAudioContext() {
    if (this.audioContext) return;
    
    try {
      window.AudioContext = window.AudioContext || window.webkitAudioContext;
      this.audioContext = new AudioContext();
      this.audioContext.resume().catch(console.error);
      
      // 如果AudioContext处于suspended状态，等待用户交互时恢复
      if (this.audioContext.state === 'suspended') {
        const resumeAudioContext = () => {
          this.audioContext.resume();
          document.removeEventListener('click', resumeAudioContext);
          document.removeEventListener('keydown', resumeAudioContext);
          document.removeEventListener('touchstart', resumeAudioContext);
        };
        
        document.addEventListener('click', resumeAudioContext);
        document.addEventListener('keydown', resumeAudioContext);
        document.addEventListener('touchstart', resumeAudioContext);
      }
    } catch (e) {
      console.warn('Web Audio API不受支持');
    }
  }

  // 加载所有音频资源
  async loadSounds() {
    // 使用base64编码的音频数据
    const soundFiles = {
    //   background: 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAASAAAeMwAUFBQUFCIiIiIiIjAwMDAwPz8/Pz8/TU1NTU1NW1tbW1tbamtra2tra3l5eXl5iYmJiYmJmZmZmZmZqampqampu7u7u7u7u8PDw8PDw9ra2tra2tra4+Pj4+Pj8/Pz8/Pz////////AAAAAExhdmYAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAABx08Sh/AAAAAAAAAAAAAAAAAAAAAP/7kGQAAANUMEoFPeACNQV40KEYABEY41g5vAAA9RjpZxRwAImU+W8eshaFpAQgALAAYALATx/nYDYCMJ0HITQYYA7AH4c7MoGsnCMU5pnW+OQnBcDrS9s4tUEgYnCQV40o4z2U9RKP/zf6AKX6QrXMmZY4BR3mp/qaL6QolnYoXrxL8SF3aMaBYAAABQDgPTFZW0jSSsJ5sMisL6vDhb3YWpfH/+5JkCoADNDdIhQXgAkCGePCgigAQ8XUiMhewaP4X5QYC8BTj6M1KDXXRpYw8mZVsqIGFTDDiNPpKXNPREZ3FahrThoIwAAAAAA//8z5tvuq1aCGAAAAAA//+jxe3IgEgABwIebhHHb3wvov2GNPQ3X0eiayjpY5ECF5QICwF5KI/AACD/9Ir/0f5JSdZ6G+4t8JaCvwA//8v+n6COAAAAAQAADlPONFMSgDh2ANh2AH8vT6LtZVpJe2UQsYbhxelhaHLXXddYXdxBEQVEy66qyqJmZqeIIFAIAAmBEBy/0TNVxU/+96OEPP/rAoD/+sEgN/0fVp
    }
  }

  // 播放音效
  playSound(name) {
    if (!this.audioContext || !this.soundEffectsEnabled || this.isMuted || this.isLoading) return;

    const buffer = this.sounds.get(name);
    if (buffer) {
      const source = this.audioContext.createBufferSource();
      source.buffer = buffer;
      source.connect(this.audioContext.destination);
      source.start(0);
    }
  }

  // 播放背景音乐
  playBackgroundMusic() {
    if (!this.audioContext || !this.bgMusicEnabled || this.isMuted || this.isLoading) return;

    const buffer = this.sounds.get('background');
    if (buffer && !this.bgMusic) {
      this.bgMusic = this.audioContext.createBufferSource();
      this.bgMusic.buffer = buffer;
      this.bgMusic.loop = true;
      this.bgMusic.connect(this.audioContext.destination);
      this.bgMusic.start(0);
    }
  }

  // 停止背景音乐
  stopBackgroundMusic() {
    if (this.bgMusic) {
      this.bgMusic.stop();
      this.bgMusic = null;
    }
  }

  // 切换所有音频
  toggleMute() {
    this.isMuted = !this.isMuted;
    if (this.isMuted) {
      this.stopBackgroundMusic();
    } else if (this.bgMusicEnabled) {
      this.playBackgroundMusic();
    }
    return this.isMuted;
  }

  // 切换背景音乐
  toggleBackgroundMusic() {
    this.bgMusicEnabled = !this.bgMusicEnabled;
    if (!this.bgMusicEnabled) {
      this.stopBackgroundMusic();
    } else if (!this.isMuted) {
      this.playBackgroundMusic();
    }
    return this.bgMusicEnabled;
  }

  // 切换音效
  toggleSoundEffects() {
    this.soundEffectsEnabled = !this.soundEffectsEnabled;
    return this.soundEffectsEnabled;
  }
}